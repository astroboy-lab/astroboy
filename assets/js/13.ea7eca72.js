(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{370:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#router"}},[t._v("#")]),t._v(" Router")]),t._v(" "),a("p",[t._v("框架约定了 "),a("code",[t._v("app/routers")]),t._v(" 目录用来存放所有的路由配置文件，将路由配置文件统一存放，这样可以避免路由规则配置散落在多个地方。")]),t._v(" "),a("h3",{attrs:{id:"router-如何定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#router-如何定义"}},[t._v("#")]),t._v(" Router 如何定义")]),t._v(" "),a("p",[t._v("每个路由文件其实都是一张路由注册表，在应用启动后，会合并所有的路由注册表，并且存放到应用内存中。")]),t._v(" "),a("p",[t._v("示例代码：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// app/routers/default.js\nmodule.exports = [\n  ['INDEX_PAGE', 'GET', ['/', '/index'], 'index.IndexController', 'getIndexHtml'],\n  ['ABOUT_PAGE', 'GET', '/about', 'index.IndexController', 'getAboutHtml']\n];\n")])])]),a("ul",[a("li",[t._v("第一个参数：可选，路由名，默认为空，大部分情况不需要设置，方便其他使用该路由。")]),t._v(" "),a("li",[t._v("第二个参数：必传，HTTP Verb，支持 GET / PUT / POST / DELETE / HEAD / OPTIONS / PATCH，不区分大小写，特殊值 ALL ，匹配所有请求")]),t._v(" "),a("li",[t._v("第三个参数：必传，匹配路由，如果需要匹配多个路径，可传入一个数组，每个路由支持字符串、正则、通配符。")]),t._v(" "),a("li",[t._v("第四个参数：必传，路由文件，规则：${目录名}.${目录名}.${文件名}（注意：目录名可能有多个）")]),t._v(" "),a("li",[t._v("第五个参数：必传，字符串或一个数组，分别代表执行的一个方法或一组方法。")])]),t._v(" "),a("h3",{attrs:{id:"关于-router-的一些约定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-router-的一些约定"}},[t._v("#")]),t._v(" 关于 Router 的一些约定")]),t._v(" "),a("ul",[a("li",[t._v("路由名命名规则：小写英文字母 + 下划线")]),t._v(" "),a("li",[t._v("JSON接口路由声明必须以 "),a("code",[t._v(".json")]),t._v(" 结尾")]),t._v(" "),a("li",[t._v("页面请求路由声明没有后缀")])]),t._v(" "),a("h3",{attrs:{id:"如何控制路由文件加载顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何控制路由文件加载顺序"}},[t._v("#")]),t._v(" 如何控制路由文件加载顺序")]),t._v(" "),a("p",[t._v("默认情况下，在应用启动后，框架会去遍历 "),a("code",[t._v("app/routers")]),t._v(" 目录下的所有文件，并且按照文件在目录中的顺序加载。但是在一些特殊场景下，比如单页应用，我们可能就需要控制路由文件的加载顺序，那么，在 "),a("code",[t._v("app/routers")]),t._v(" 目录下就需要先定义一个 "),a("code",[t._v("index.js")]),t._v(" 文件，通过这个文件来手动控制路由注册顺序，如下代码所示。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("module.exports = [\n  ...require('./default'),\n  ...require('./common')\n];\n")])])]),a("p",[a("strong",[t._v("注意")]),t._v("：一旦 "),a("code",[t._v("app/routers")]),t._v(" 目录存在 "),a("code",[t._v("index.js")]),t._v(" 文件，框架就只会加载该文件。")]),t._v(" "),a("h3",{attrs:{id:"真实业务场景实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#真实业务场景实例"}},[t._v("#")]),t._v(" 真实业务场景实例")]),t._v(" "),a("p",[t._v("简单业务场景，例如 Restful JSON 接口：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/wscshop/showcase/shopnav/nav.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'showcase.ShopNavController'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'getShopNavJson'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("复杂业务场景，例如下面的店铺主页：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/wscshop/home/:alias'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'showcase.HomepageController'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'checkVipDomain'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initKdtId'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initHomepageDetailData'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initPlatform'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initAcl'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initBaseInfo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'getIndexHtml'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h3",{attrs:{id:"如何查看完整的路由注册表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何查看完整的路由注册表"}},[t._v("#")]),t._v(" 如何查看完整的路由注册表")]),t._v(" "),a("p",[t._v("应用启动后，框架会对 "),a("code",[t._v("app/routers")]),t._v(" 目录下的所有文件做一个合并，并且把合并后的路由注册表输出到 "),a("code",[t._v("run/routers.json")]),t._v(" 文件。")])])}),[],!1,null,null,null);s.default=e.exports}}]);