(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{376:function(t,a,e){"use strict";e.r(a);var _=e(45),v=Object(_.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),e("h3",{attrs:{id:"_1-配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-配置文件"}},[t._v("#")]),t._v(" 1. 配置文件")]),t._v(" "),e("p",[t._v("配置文件分三种类型：普通配置、插件配置、中间件配置，每种类型配置又都区分默认配置和根据环境变量加载的配置。")]),t._v(" "),e("p",[t._v("常见的 NODE_ENV 环境变量：")]),t._v(" "),e("ul",[e("li",[t._v("development 开发环境")]),t._v(" "),e("li",[t._v("qa 测试环境")]),t._v(" "),e("li",[t._v("pre 预发环境")]),t._v(" "),e("li",[t._v("perf 性能压测环境")]),t._v(" "),e("li",[t._v("prod 生产环境")])]),t._v(" "),e("h3",{attrs:{id:"_2-普通配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-普通配置"}},[t._v("#")]),t._v(" 2. 普通配置")]),t._v(" "),e("p",[t._v("普通配置分两种类型：")]),t._v(" "),e("ul",[e("li",[t._v("默认配置文件 config.default.js")]),t._v(" "),e("li",[t._v("跟 env 环境相关的配置文件 config.${NODE_ENV}.js")])]),t._v(" "),e("h3",{attrs:{id:"_3-中间件配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-中间件配置"}},[t._v("#")]),t._v(" 3. 中间件配置")]),t._v(" "),e("p",[t._v("中间件配置分两种类型：")]),t._v(" "),e("ul",[e("li",[t._v("默认中间件配置文件 middleware.default.js")]),t._v(" "),e("li",[t._v("根据环境区分的配置文件 middleware.${env}.js")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const path = require('path');\n\nmodule.exports = {\n  'astroboy-static': {\n    priority: 3,\n    enable: true,\n    options: {\n      root: path.resolve('/tmp/static')\n    }\n  }\n}\n")])])]),e("p",[t._v("配置参数说明：")]),t._v(" "),e("ul",[e("li",[t._v("priority {Number} 中间件加载顺序权重，1 ~ 99 内核框架级中间件，100 ~ 199 自定义框架级中间件，200 ~ 299 项目级中间件")]),t._v(" "),e("li",[t._v("enable {Boolean} 是否开启中间件")]),t._v(" "),e("li",[t._v("options {Object} 中间件配置信息，应用启动加载中间件的时候会将该参数传递给中间件。")]),t._v(" "),e("li",[t._v("match {String/RegExp/Function/Array} 设置只有符合某些规则的请求才会经过这个中间件")]),t._v(" "),e("li",[t._v("ignore {String/RegExp/Function/Array} 设置符合某些规则的请求不经过这个中间件")])]),t._v(" "),e("p",[e("strong",[t._v("注意")]),t._v("：match 和 ignore 支持的参数都一样，只是作用完全相反，match 和 ignore 不允许同时配置。")]),t._v(" "),e("p",[t._v("match 和 ignore 支持的配置方式：")]),t._v(" "),e("ul",[e("li",[t._v("字符串：当参数为字符串类型时，配置的是一个 URL 的路径前缀，所有以配置的字符串作为前缀的 URL 都会匹配上。")]),t._v(" "),e("li",[t._v("正则表达式：当参数为正则时，直接匹配满足正则验证的 URL 的路径；")]),t._v(" "),e("li",[t._v("函数：当参数为一个函数时，会将请求上下文 ctx 传递给这个函数，最终取函数返回的结果（true / false）来判断是否匹配。")]),t._v(" "),e("li",[t._v("数组，每个元素可以是上面三种类型。")])]),t._v(" "),e("h3",{attrs:{id:"_4-插件配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-插件配置"}},[t._v("#")]),t._v(" 4. 插件配置")]),t._v(" "),e("p",[t._v("插件配置分两种类型：")]),t._v(" "),e("ul",[e("li",[t._v("默认配置文件 plugin.default.js")]),t._v(" "),e("li",[t._v("根据环境区分的配置文件 plugin.${env}.js")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const path = require('path');\n\nmodule.exports = {\n  'astroboy-body': {\n    enable: true,\n    path: path.resolve(__dirname, '../plugins/astroboy-body')\n  },\n\n  'astroboy-meta': {\n    enable: true,\n    package: 'astroboy-meta'\n  }\n};\n")])])]),e("p",[t._v("配置参数说明：")]),t._v(" "),e("ul",[e("li",[t._v("enable {Boolean} 是否开启插件")]),t._v(" "),e("li",[t._v("package {String} npm 包名称，通过 npm 包的形式引入插件")]),t._v(" "),e("li",[t._v("path {String} 插件绝对路径，跟 package 配置互斥")])]),t._v(" "),e("p",[e("strong",[t._v("注意：")]),t._v(" package 和 path 配置互斥，如果两个都配置了，则以 path 配置为准。")])])}),[],!1,null,null,null);a.default=v.exports}}]);